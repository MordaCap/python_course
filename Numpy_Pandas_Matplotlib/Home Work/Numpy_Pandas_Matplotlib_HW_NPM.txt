Написать программу, измеряющую алгоритмическую сложность реализованного в numpy 
алгоритма перемножения матриц. Создать из полученных данных дата-фрейм pandas 
и вывести в виде таблицы, посчитать средние значения и погрешности. Построить 
при помощи matplotlib график зависимости времени перемножения матриц от размера 
матрицы с отображением погрешностей ("усов"), обозначений осей, подписей, легендой,
экспортировать график в файл, пригодный для вставки: а) в MS Word; б) в LaTex.

Под алгоритмической сложностью в данном задании понимается показатель степени 
в соотношении, связывающем размер матриц и время, затраченное на их произведение. 
Пусть матрицы размером N1xN1 перемножаются за время T1, а матрицы размером N2xN2 
перемножаются за время T2. Алгоритмическая сложность n будет означать, 
что (T2/T1) = (N2/N1)**n
Измерив времена T1 и T2, мы можем найти: n = log(T2/T1)/log(N2/N1). 
Если посчитать T для разных N и построить на графике точки в логарифмическом 
масштабе по обеим осям, то в идеале должна получиться прямая линия, тангенс 
угла наклона которой даст нам n. Однако реальная имплементация может содержать 
вариации алгоритма умножения матриц в зависимости от N. Например, маленькие матрицы 
могут перемножаться по одному алгоритму, большие по другому. То есть в реальной 
ситуации n может зависеть от N. Задача состоит в том, чтобы выяснить, зависит 
ли n от N, и если зависит, то как.
То есть, помимо графика log(T)(log(N)) необходимо построить ещё и график n(N) 
(на этот раз в обычных, нелогарифмических осях). На каждом графике экспериментальные 
точки должны быть представлены в виде точки с погрешностями, а линия должна 
аппроксимировать эти точки.
Иными словами, я ожидаю увидеть графики типа представленных на прикрепленном рисунке.

Программа должна корректно работать как под Windows, так и под Linux. Это значит,
что я ожидаю увидеть питоновский скрипт, который запускается из командной строки
и выводит графические результаты в отдельных окнах, а также записывает графики
в файлы растрового и векторного формата (скажем, png и eps).